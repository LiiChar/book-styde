import { BookTypeWork, Books } from '@/types/Book';

export const book = `{
  "book": [
    {
      "title": "Sample Book 1",
      "chapter": 1,
      "content": "This is the content of Sample Book 1.",
      "parts": [
        {
          "title": "Introduction",
          "chapter": 1,
          "content": "Introduction to Sample Book 1.",
          "works": [
            {
              "type": "CODE",
              "code": "const x = 5;",
              "answer": "5",
              "explain": "This is a simple code example.",
              "language": "javascript"
            },
            {
              "type": "QUESTION",
              "question": "What is the capital of France?",
              "answer": "Paris",
              "explain": "Paris is the capital of France."
            }
          ]
        },
        {
          "title": "Chapter 1",
          "chapter": 2,
          "content": "Content of Chapter 1.",
          "works": [
            {
              "type": "CODE",
              "code": "const y = 10;",
              "answer": "10",
              "explain": "Another code example.",
              "language": "javascript"
            },
            {
              "type": "QUESTION",
              "question": "What is the largest mammal?",
              "answer": "Blue whale",
              "explain": "Blue whale is the largest mammal."
            }
          ]
        }
      ]
    },
    {
      "title": "Sample Book 2",
      "chapter": 1,
      "content": "This is the content of Sample Book 2.",
      "parts": [
        {
          "title": "Prologue",
          "chapter": 1,
          "content": "Prologue of Sample Book 2.",
          "works": [
            {
              "type": "CODE",
              "code": "console.log('Hello, World!');",
              "answer": "Hello, World!",
              "explain": "A simple JavaScript console log.",
              "language": "javascript"
            },
            {
              "type": "QUESTION",
              "question": "What is the capital of Japan?",
              "answer": "Tokyo",
              "explain": "Tokyo is the capital of Japan."
            }
          ]
        },
        {
          "title": "Chapter 1",
          "chapter": 2,
          "content": "Content of Chapter 1 in Sample Book 2.",
          "works": [
            {
              "type": "CODE",
              "code": "const z = 15;",
              "answer": "15",
              "explain": "Yet another code example.",
              "language": "javascript"
            },
            {
              "type": "QUESTION",
              "question": "Who wrote 'Romeo and Juliet'?",
              "answer": "William Shakespeare",
              "explain": "William Shakespeare wrote 'Romeo and Juliet'."
            }
          ]
        }
      ]
    }
  ]
}
`;

export const data: Books = {
	book: [
		{
			title: 'Язык HTML',
			chapter: 1,
			part: 'html',
			content: `Язык HTML - это основа web сайтов`,
			parts: [
				{
					title: 'Введение',
					chapter: 1.1,
					content: `<h3>Изучение HTML: руководства и уроки</h3>

<p>Чтобы создавать веб-сайты, вы должны знать о HTML — фундаментальной технологии, которая используется для определения структуры веб-страницы. HTML применяется для того, чтобы определить как должен отображаться ваш контент: в виде абзаца, списка, заголовка, ссылки, изображения, мультимедийного проигрывателя, формы или же в виде одного из множества других доступных элементов, а также возможного нового элемента, который вы сами создадите.</p>

<h3>Путь обучения (образовательная траектория)</h3>

<p>В идеале вы должны начать своё учебное путешествие с изучения HTML. Начните с прочтения раздела "Введение в HTML". Затем вы можете перейти к изучению более продвинутых тем, таких как:</p>

<ul>
  <li><strong>CSS (Каскадные таблицы стилей)</strong>, и как их использовать для оформления (стилизации) HTML-документа (например, изменение шрифта и его размера, добавление границы и теней для элементов, разбиение страницы на несколько столбцов, добавление анимации и других визуальных эффектов).</li>
  <li><strong>JavaScript</strong>, и как его использовать для придания динамической функциональности веб-страницам (например, определение вашего местоположения и отображение его на карте, создание элементов, которые будут появляться/исчезать при нажатии на кнопку, сохранение данных пользователей локально на их компьютерах и многое другое).</li>
</ul>

<p>Прежде чем приступить к этой теме, вы должны иметь хотя бы базовое представление об использовании компьютеров вообще и уметь "пассивно" использовать Интернет (т.е. уметь просматривать веб-страницы, быть потребителем контента). У вас должна быть базовая рабочая среда, описанная в разделе "Установка базового программного обеспечения", а также вы должны понимать, как создавать файлы и управлять ими, что подробно описано в разделе "Работа с файлами" — обе статьи являются частью нашего модуля для новичков - "Начало работы с вебом".</p>

<p>Перед тем, как начать эту тему, рекомендуется пройтись по разделу "Начало работы с вебом", однако это необязательно; многое из того, что описано в статье "Основы HTML", также рассматривается и во "Введении в HTML", причём даже более подробно.</p>
`,
					works: [],
				},
				{
					title: 'Что внутри "head"? Метаданные в HTML',
					chapter: 1.2,
					content: `
<p>Элемент head HTML-документа не отображается на странице в веб-браузере. Он содержит такую информацию, как:</p>
<ul>
  <li>заголовок (title) страницы</li>
  <li>ссылки на файлы CSS (если вы хотите применить к вашему HTML стили CSS)</li>
  <li>ссылки на иконки</li>
  <li>другие метаданные (данные о HTML: автор и важные ключевые слова, описывающие документ.)</li>
</ul>
<p>В этой статье мы рассмотрим всё вышеперечисленное и многое другое, чтобы дать вам хорошую основу для работы с разметкой.</p>
<h3>Предварительные требования:</h3>
<p>Базовое знакомство с HTML, описанное в <a href="#">Начало работы с HTML</a>.</p>
<h3>Задача:</h3>
<p>Узнать о заголовке HTML, его значении, важнейших элементах, которые содержатся в нём, и о том, как он может повлиять на HTML-документ.</p>
<h3>Что такое ?</h3>
<p>Давайте снова посмотрим на HTML-документ из прошлой статьи:</p>
<Code language="markup" compile={false} disable={true}>
<head>
  <meta charset="utf-8" />
  <title>Моя тестовая страница</title>
</head>
</Code>
<p>Содержимое , в отличие от содержимого элемента body, не отображается на странице. Задача  — хранить метаданные документа. В приведённом выше примере  совсем небольшой:</p>
<Code language="markup" compile={false} disable={true}>
<head>
  <meta charset="utf-8" />
  <title>Моя тестовая страница</title>
</head>
<body>
  <p>Это — моя страница</p>
</body>
</Code>
<p>Однако на больших страницах блок  может быть довольно объёмным. Попробуйте зайти на какие-нибудь из ваших любимых сайтов и посмотреть содержимое  с помощью инструментов разработчика. Наша цель сейчас — не в том, чтобы показать вам, как использовать всё, что только можно добавить в head, а дать представление и научить вас, как использовать основные элементы. Давайте начнём.</p>
<h3>Название страницы (title)</h3>
<p>Мы уже видели, как работает элемент title: его используют для добавления заголовка (названия страницы) в документ. Элемент h1 (en-US) тоже иногда называют заголовком страницы. Но это разные вещи!</p>
<ul>
  <li>Элемент h1 (en-US) виден на странице, открытой в браузере, — его используют один раз на странице, чтобы выделить название содержимого. Это может быть название истории, заголовок новости или что-то в этом роде.</li>
  <li>Элемент title — метаданные, название всего HTML-документа, а не заголовок внутри его содержимого.</li>
</ul>
<h3>Активное изучение: разбор простого примера</h3>
<p>Чтобы приступить к активному изучению, скачайте страницу title-example.html из нашего GitHub-репозитория. Это можно сделать двумя способами:</p>
<ol>
  <li>Скопируйте и вставьте код страницы в новый текстовый файл в своём редакторе кода, затем сохраните его в любом удобном месте.</li>
  <li>Нажмите на странице кнопку "Raw", нажмите Файл > Сохранить Как... в меню браузера и выберите папку для сохранения.</li>
</ol>
<p>Откройте файл в браузере. Вы увидите что-то вроде этого:<em>A simple web page with the title set to 'title' element, and the 'h1' set to 'h1' element.</em></p>
<p>Теперь должно стать совершенно ясно, в чём разница между h1 и title!</p>
<p>Откройте код страницы в редакторе, измените содержимое элементов и обновите страницу в браузере. Развлекайтесь!</p>
<p>Содержимое элемента title используется и в других местах. Например, при добавлении страницы в избранное (Bookmarks > Bookmark This Page в Firefox), текст из title предлагается в качестве названия закладки.</p>

<p>Текст из title также появляется в результатах поиска, как мы скоро увидим.</p>
<h3>Метаданные: Элемент meta</h3>
<p>Метаданные — данные, которые описывают данные. У HTML есть «официальное» место для метаданных документа — элемент meta. Конечно, другие вещи, о которых мы говорим в этой статье, тоже можно назвать метаданными. Существует множество разновидностей meta. Не станем пытаться охватить их все сразу — так недолго и запутаться, а рассмотрим несколько самых популярных, чтобы разобраться, что к чему.</p>
<h3>Указываем кодировку текста документа</h3>
<p>В заголовке примера выше есть следующая строка:</p>
<Code language="markup" compile={false} disable={true}>
  <meta charset="utf-8"/>
</Code>
<p>В этом элементе указана кодировка документа — набор символов, которые в нём можно использовать. utf-8 — универсальный набор символов, который включает почти все символы со всех языков человечества. Такая веб-страница сможет работать с любым языком. Установить эту кодировку на всех веб-страницах, которые вы создаёте — отличная идея! Страница в такой кодировке прекрасно отображает как английские, так и японские символы:</p>

<p>Если использовать, скажем, кодировку ISO-8859-1 (набор символов для латиницы), текст страницы испортится:</p>

<p>Примечание: Некоторые браузеры (например, Chrome) автоматически исправляют неправильную кодировку, поэтому, в зависимости от используемого вами браузера, вы можете не увидеть эту проблему. Несмотря на это вам всё равно необходимо указывать кодировку UTF-8 для вашей страницы, чтобы избежать возможных проблем в других браузерах.</p>
<h3>Активное изучение: экспериментируем с символьными кодировками</h3>
<p>Чтобы проверить это, вернитесь к HTML из примера title (странице title-example.html), поменяйте meta charset на ISO-8859-1 и попробуйте написать что-нибудь на японском или русском. Вот текст из нашего примера (кстати, там написано «рис горячий»):</p>
          `,
					works: [
						{
							type: BookTypeWork.CODE,
							code: 'const x = 5;',
							answer: '5',
							explain: 'This is a simple code example.',
							language: 'javascript',
						},
						{
							type: BookTypeWork.QUESTION,
							question: 'Для чего нужент мета тег title',
							answer: 'Указание названия страницы',
							explain:
								'Мы уже видели, как работает элемент title: его используют для добавления заголовка (названия страницы) в документ.',
							variant: [
								'Указание названия страницы',
								'Указание описания страницы',
								'Для указания ключевого слова',
							],
						},
					],
				},
			],
		},
	],
};
