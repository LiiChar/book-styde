// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model UserBooks {
  id         Int      @id @default(autoincrement())
  user_id    Int
  user       Users    @relation(fields: [user_id], references: [id], onDelete: Cascade)
  chapter    Float
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model UserWorks {
  id         Int      @id @default(autoincrement())
  user       Users    @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id    Int
  work       Works    @relation(fields: [work_id], references: [id], onDelete: Cascade)
  work_id    Int
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Users {
  id         Int         @id @default(autoincrement())
  name       String      @unique
  question   String
  key_word   String
  group      String?
  role       String      @default("user")
  is_verify  Boolean     @default(false)
  created_at DateTime    @default(now())
  updated_at DateTime    @updatedAt
  UserBooks  UserBooks[]
  Comments   Comments[]
  UserWorks  UserWorks[]
}

model Comments {
  id         Int      @id @default(autoincrement())
  content    String
  user       Users    @relation(fields: [user_id], references: [id], onDelete: Cascade)
  book_id    Float
  user_id    Int
  rate       Int      @default(0)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Books {
  id         Int        @id @default(autoincrement())
  title      String
  chapter    Int
  content    String
  Chapters   Chapters[]
  created_at DateTime   @default(now())
  updated_at DateTime   @updatedAt
}

model Chapters {
  id      Int     @id @default(autoincrement())
  title   String
  book    Books   @relation(fields: [book_id], references: [id], onDelete: Cascade)
  book_id Int
  chapter Int
  content String
  Works   Works[]
}

model Works {
  id          Int         @id @default(autoincrement())
  visit       Int         @default(0)
  resolve     Int         @default(0)
  type        String
  description String?
  question    String
  answer      String
  explain     String
  variant     String?
  code        String?
  language    String?
  created_at  DateTime    @default(now())
  updated_at  DateTime    @updatedAt
  UserWorks   UserWorks[]
  Chapters    Chapters?   @relation(fields: [chaptersId], references: [id])
  chaptersId  Int?
}
